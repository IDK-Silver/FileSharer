# =============================================================================
# FileSharer Backend Configuration
# =============================================================================

# General Project Settings
PROJECT_NAME="FileSharer"
VERSION="1.0.0"

# =============================================================================
# Authentication & Security Settings
# =============================================================================

# JWT Settings
JWT_SECRET_KEY="your-super-secret-key-that-is-long-and-random"
ALGORITHM="HS256"
ACCESS_TOKEN_EXPIRE_MINUTES=30

# Refresh Token Cookie Settings
REFRESH_TOKEN_EXPIRE_DAYS=7
REFRESH_TOKEN_COOKIE_NAME="file-sharer_refresh_token"
REFRESH_TOKEN_COOKIE_HTTPONLY=True
REFRESH_TOKEN_COOKIE_SAMESITE="lax"
# Set to False for local HTTP development, True for production HTTPS
REFRESH_TOKEN_COOKIE_SECURE=False

# =============================================================================
# Database Configuration
# =============================================================================

# Database URL
# For local development (backend runs on host):
# DATABASE_URL="mysql+pymysql://user:password@localhost:3306/dbname"
# For Docker Compose (backend runs in container):
DATABASE_URL="mysql+pymysql://${MYSQL_USER}:${MYSQL_PASSWORD}@${MYSQL_HOST}:${MYSQL_PORT}/${MYSQL_DATABASE}"

# =============================================================================
# Storage Provider Configuration
# =============================================================================

# Storage Provider Selection: "s3" | "gcs"
# Default: "s3" (works with MinIO for local development)
STORAGE_PROVIDER="s3"

# =============================================================================
# Default Storage Settings (MinIO - Ready to use with Docker Compose)
# =============================================================================

# MinIO Settings (Default for local development)
# For local development (backend runs on host):
# MINIO_ENDPOINT_URL="http://localhost:9000"
# For Docker Compose (backend runs in container):
MINIO_ENDPOINT_URL="http://minio:9000"

# MinIO Credentials (default MinIO credentials)
MINIO_ROOT_USER="minioadmin"
MINIO_ROOT_PASSWORD="minioadmin"

# AWS S3 Configuration (using MinIO credentials by default)
AWS_ACCESS_KEY_ID=${MINIO_ROOT_USER}
AWS_SECRET_ACCESS_KEY=${MINIO_ROOT_PASSWORD}
AWS_SESSION_TOKEN=""
AWS_REGION="us-east-1"
S3_BUCKET_NAME="file-sharer-system-storage"

# S3 Endpoint URL (set to MinIO by default, empty for AWS S3)
S3_ENDPOINT_URL=${MINIO_ENDPOINT_URL}

# =============================================================================
# File Upload & URL Settings
# =============================================================================

# Presigned URL Settings
PRESIGNED_URL_EXPIRE_SECONDS=3600
PRESIGNED_URL_EXPIRE_SECONDS_MAX=86400

# =============================================================================
# Alternative Storage Configurations (Advanced Users)
# =============================================================================

# To use AWS S3 instead of MinIO:
# 1. Set your AWS credentials:
#    AWS_ACCESS_KEY_ID="your_aws_access_key"
#    AWS_SECRET_ACCESS_KEY="your_aws_secret_key"
#    AWS_REGION="your_preferred_region"
# 2. Set your S3 bucket:
#    S3_BUCKET_NAME="your-s3-bucket-name"
# 3. Remove S3 endpoint URL (use AWS S3):
#    S3_ENDPOINT_URL=""
# 4. Comment out MinIO service in docker-compose.yaml

# To use Google Cloud Storage:
# 1. Change storage provider:
#    STORAGE_PROVIDER="gcs"
# 2. Set GCS credentials:
#    GOOGLE_APPLICATION_CREDENTIALS="/path/to/service-account-key.json"
# 3. Set GCS bucket:
#    GCS_BUCKET_NAME="your-gcs-bucket-name"
# 4. Comment out MinIO service in docker-compose.yaml

# =============================================================================
# Google Cloud Storage Settings (when STORAGE_PROVIDER="gcs")
# =============================================================================

# Uncomment these when using GCS:
# GOOGLE_APPLICATION_CREDENTIALS="/app/credentials/gcs-service-account.json"
# GCS_BUCKET_NAME="your-gcs-bucket-name"
# GOOGLE_CLOUD_PROJECT="your-gcs-project-id"

# =============================================================================
# Development Notes
# =============================================================================

# Default Setup (MinIO):
# - No additional configuration needed
# - Run: docker-compose up -d --build
# - MinIO Console: http://localhost:9001 (minioadmin/minioadmin)

# AWS S3 Setup:
# - Configure AWS credentials above
# - Set S3_ENDPOINT_URL=""
# - Comment out MinIO service in docker-compose.yaml

# GCS Setup:
# - Download service account JSON key
# - Mount it in docker-compose.yaml
# - Set STORAGE_PROVIDER="gcs"
# - Comment out MinIO service in docker-compose.yaml

# =============================================================================
# Security Notes
# =============================================================================

# 1. Change default credentials in production
# 2. Never commit real credentials to version control
# 3. Use environment-specific .env files
# 4. For production, use secret management services